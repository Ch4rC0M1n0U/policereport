version: '3.8'

services:
  postgres_db:
    image: postgres:15-alpine
    container_name: police_report_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-policereportdb}
    ports:
      - "${DB_PORT:-5433}:5432" # Map to a different host port if needed
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql # Initialize DB with schema
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-policereportdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  police-report-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: police_report_app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      # For production in EasyPanel, DATABASE_URL will be set directly.
      # For local docker-compose, we construct it or use individual vars.
      DATABASE_URL: postgresql://${DB_USER:-admin}:${DB_PASSWORD:-password}@postgres_db:5432/${DB_NAME:-policereportdb}
      DB_HOST: postgres_db # For lib/db.ts when not in full production mode
      DB_PORT: 5432
      DB_USER: ${DB_USER:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-policereportdb}
      UNSPLASH_ACCESS_KEY: ${UNSPLASH_ACCESS_KEY}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000} # Default for local, override in EasyPanel
    depends_on:
      postgres_db:
        condition: service_healthy # Wait for postgres_db to be healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
